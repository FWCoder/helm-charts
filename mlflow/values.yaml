# Arguments to `mlflow server`

# backendStore can either be a database, a filepath, or the default value
# At present, postgres is the only database engine supported by the 
# official image. Should you want to connect to any other database, 
# you need to install the right drivers in the docker image. 
# PRs are welcome here: 
#   https://github.com/larribas/docker-production-mlflow
backendStore: {}
  # filepath: /mnt/persistent-disk
  # postgres:
  #   username:
  #   password: 
  #   host:
  #   port:
  #   database:

# Keep in mind a default artifact root is necessary when specifying a database backend store
defaultArtifactRoot:
extraArgs: {}
  # workers: 2
  # expose-prometheus: yes

replicaCount: 1

image:
  repository: larribas/mlflow
  # tag: '1.7.0'
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 5000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
      # - path: "/*"
      #   serviceNameOverride: chart-example  (leave empty for the mlflow service name)
      #   servicePortOverride: 80             (leave empty for the mlflow service port)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
